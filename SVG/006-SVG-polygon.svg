<!-- <svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
  <polygon points="200,10 259,190 190,40" fill="#000" stroke="red" stroke-width="5"></polygon>
</svg> -->

<!-- 
points 属性定义多边形每个角的 x 和 y 坐标
 -->



<!-- 四边形 -->
<!-- <svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
  <polygon points="100,0 140,190 80,210 40,200" fill="red" stroke="#000" stroke-width="2"></polygon>
</svg> -->



<!-- 五角星 -->
<!-- <svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
  <polygon points="100,0 155,200 0,70 200,70 25,200" stroke="red" stroke-width="2"></polygon>
</svg> -->


<!-- fill-rule="evenodd" 去掉中间部分颜色 -->
<!-- 
fill-rule="判断画布上的区域是否属于该图形的内部"
evenodd
inherit
initial
nonzero
unset
-->


<!-- 
nonzero
字面意思是“非零”。按该规则，要判断一个点是否在图形内，从该点作任意方向的一条射线，
然后检测射线与图形路径的交点情况。从0开始计数，路径从左向右穿过射线则计数加1，从右向左穿过射线则计数减1。
得出计数结果后，如果结果是0，则认为点在图形外部，否则认为在内部。


evenodd
字面意思是“奇偶”。按该规则，要判断一个点是否在图形内，从该点作任意方向的一条射线，
然后检测射线与图形路径的交点的数量。如果结果是奇数则认为点在内部，是偶数则认为点在外部
-->
<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'>
  <polygon points="100,0 155,200 0,70 200,70 25,200" stroke="red" stroke-width="2" fill-rule="evenodd"></polygon>
</svg>